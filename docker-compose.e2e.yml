services:
  db:
    # Override the volume to use ephemeral storage for e2e tests
    volumes:
      - db_data:/var/lib/postgresql/data
    # Emphasize clean state for tests
    command: postgres -c fsync=off
  fs:
    volumes:
      - /data
  fs-seed:
    image: minio/mc
    depends_on:
      fs:
        condition: service_healthy
    volumes:
      - ./.minio:/.minio
      - shared-minio:/shared-minio
    environment:
      MINIO_URL: "http://fs:9000"
      MINIO_ROOT_USER: localuser
      MINIO_ROOT_PASSWORD: localpass
      MINIO_SEED_DATA_DIR: .minio/data
      MINIO_PRESIGNED_URL_FILEPATH: /shared-minio/presigned_urls.json
    entrypoint: ./.minio/seed_fileserver.sh
  db-seed:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_CONFIG: '{"DB_URL": "postgresql+asyncpg://localuser:localpass@db:5432/destiny_dev"}'
      ENV: "test"
      AZURE_APPLICATION_ID: "dummy"
      AZURE_TENANT_ID: "dummy"
      APP_NAME: "dummy"
    entrypoint: alembic upgrade head
  repository:
    build:
      context: .
      dockerfile: Dockerfile
    image: destiny-repository
    depends_on:
      db-seed:
        condition: service_completed_successfully
      fs-seed:
        condition: service_completed_successfully
      http:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./app:/src/app
    env_file:
      - .env
    environment:
      # Overwrite with docker network hostname
      MESSAGE_BROKER_URL: amqp://guest:guest@rabbitmq:5672
      DB_CONFIG: '{"DB_URL":"postgresql+asyncpg://localuser:localpass@db:5432/destiny_dev"}'
      MINIO_CONFIG: '{"HOST":"fs:9000", "ACCESS_KEY": "localuser", "SECRET_KEY": "localpass"}'
      KNOWN_ROBOTS: '[{"robot_id": "1ee5aa1f-3248-4d21-9fee-718d4ff0ba5f", "robot_url": "http://toy-robot:8001/toy/enhancement/", "dependent_enhancements":["annotation","abstract"], "dependent_identifiers":["doi","pm_id"], "auth_method":{"authentication_type": "access_token", "access_token": "dummy"}}]'
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import socket; sock = socket.create_connection(('localhost',8000), 2); sock.close()",
        ]
      interval: 2s
      timeout: 2s
      retries: 5
  e2e-task-worker:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      MESSAGE_BROKER_URL: amqp://guest:guest@rabbitmq:5672
      DB_CONFIG: '{"DB_URL":"postgresql+asyncpg://localuser:localpass@db:5432/destiny_dev"}'
      MINIO_CONFIG: '{"HOST":"fs:9000", "ACCESS_KEY": "localuser", "SECRET_KEY": "localpass"}'
      KNOWN_ROBOTS: '[{"robot_id": "1ee5aa1f-3248-4d21-9fee-718d4ff0ba5f", "robot_url": "http://toy-robot:8001/toy/enhancement/", "dependent_enhancements":["annotation","abstract"], "dependent_identifiers":["doi","pm_id"], "auth_method":{"authentication_type": "access_token", "access_token": "dummy"}}]'
    entrypoint: taskiq worker app.tasks:broker --fs-discover
  toy-robot:
    image: toy-robot
    environment:
      DESTINY_REPOSITORY_URL: "http://repository:8000"
      ENV: "test"
      AZURE_APPLICATION_ID: "dummy"
      AZURE_TENANT_ID: "dummy"
      ACCESS_TOKEN: "dummy"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import socket; sock = socket.create_connection(('localhost',8001), 2); sock.close()",
        ]
      interval: 2s
      timeout: 2s
      retries: 5
  e2e:
    container_name: e2e
    build:
      context: .
      dockerfile: Dockerfile.e2e
    volumes:
      - ./tests/e2e:/e2e
      - shared-minio:/shared-minio
    ports:
      - 8001:8001
    depends_on:
      repository:
        condition: service_healthy
      e2e-task-worker:
        condition: service_started
      toy-robot:
        condition: service_healthy
    environment:
      DB_URL: "postgresql+psycopg://localuser:localpass@db:5432/destiny_dev"
      REPO_URL: "http://repository:8000"
      HTTP_CLIENT_URL: "http://http:5678"
      MINIO_URL: "http://fs:9000"
      CALLBACK_URL: "http://e2e:8001"
      TOY_ROBOT_ID: "1ee5aa1f-3248-4d21-9fee-718d4ff0ba5f"
      ENV: "test"
      MINIO_PRESIGNED_URL_FILEPATH: /shared-minio/presigned_urls.json
    entrypoint: poetry run pytest /e2e

# Use ephemeral volumes for tests
volumes:
  shared-minio:
  db_data:
