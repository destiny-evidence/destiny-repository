"""
remove unique identifier index, add tree search indexes

Revision ID: e2b5649fcd0b
Revises: 09660e11fac0
Create Date: 2025-10-02 07:26:46.921681+00:00

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = 'e2b5649fcd0b'
down_revision: Union[str, None] = '09660e11fac0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uix_external_identifier'), 'external_identifier', type_='unique')
    op.create_index('ix_external_identifier_type', 'external_identifier', ['identifier_type', 'identifier'], unique=False, postgresql_where=sa.text("identifier_type != 'other'"))
    op.create_index('ix_external_identifier_type_other', 'external_identifier', ['identifier_type', 'other_identifier_name', 'identifier'], unique=False, postgresql_where=sa.text("identifier_type = 'other'"))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_external_identifier_type_other', table_name='external_identifier', postgresql_where=sa.text("identifier_type = 'other'"))
    op.drop_index('ix_external_identifier_type', table_name='external_identifier', postgresql_where=sa.text("identifier_type != 'other'"))
    op.create_unique_constraint(op.f('uix_external_identifier'), 'external_identifier', ['identifier_type', 'identifier', 'other_identifier_name'], postgresql_nulls_not_distinct=True)
    # ### end Alembic commands ###
