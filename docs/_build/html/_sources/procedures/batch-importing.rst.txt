Importing References with Batches
==================================

The Import Process
------------------

References are bulk imported using batches per the following process:

.. mermaid::

    sequenceDiagram
        actor M as Import Manager
        participant I as Importer
        participant S as Source
        participant SP as Storage Provider
        participant R as Data Repo
        M ->> I: Start Import (processor id, query)
        I ->> S: Search Query
        S -->> I: Search Results
        I ->>+ R: POST /imports/record/ : Register Import (query, importer metadata, result count)
        R -->> I: ImportRecord (record id)
        loop Each batch
            I ->> SP: Upload Enriched References File
            SP -->> I: Upload Success (file url)
            I ->>+ R: POST /imports/<record id>/batch/ : Register Batch (file url, callback url, import id)
            R -->> I: Batch Enqueued(batch id)
            R ->> SP: Download References File (file url)
            SP -->> R: Enriched References
            R ->> R: Persist Enriched References
            R ->>- I: POST <callback url>: ImportBatchSummary
            I ->> S: Delete Enhancement Batch (file url)
        end
        I ->> R: POST /imports/<record_id>/complete/ Finalise Import (import id)
        R -->>- I: Import Results

Participants
------------

.. list-table:: Participants
   :header-rows: 1

   * - **Participant**
     - **Description**
   * - Importer
     - Process responsible for preparing the enhanced documents for import
   * - Source
     - Where the importer is getting its data from (e.g. PIK Solr OpenAlex copy, incremental updater)
   * - Storage Provider
     - HTTPS compatible endpoint where the data to import is stored
   * - Data Repo
     - The DESTINY data repository application

Entities
--------

.. mermaid::

    erDiagram

    ImportRecord ||--o{ ImportBatch : "is composed of"

    ImportBatch ||--o{ ImportResult : "produces"

    ImportResult ||--o| Reference : "creates or updates"

    Reference ||--|{ ExternalIdentifier : "has"

    Reference ||--o{ Enhancement : "has"

File Format
-----------

The references file provided to each batch must be in the `jsonl`_ format. Each line is a JSON object in the ``ReferenceCreate`` format.

Sample files can be found in the ``.minio/data`` directory.

Callbacks
---------

Collision Handling
------------------

If an imported reference has the same identifier as an existing reference, the collision will be handled according to the strategy.

.. _jsonl: https://jsonlines.org
