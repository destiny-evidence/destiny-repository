name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.rst"

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.14"
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.db_password }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
        env:
          discovery.type: single-node
          xpack.security.enabled: "false"
        ports:
          - 9200:9200
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.14"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install the project
        run: uv sync --locked --dev

      - name: Run test with pytest via uv
        env:
          DB_CONFIG: '{"DB_URL": "postgresql+asyncpg://postgres:${{ secrets.db_password }}@localhost:5432/destiny_test"}'
          ES_CONFIG: '{"ES_INSECURE_URL": "http://localhost:9200"}'
          AZURE_APPLICATION_ID: ${{ vars.azure_application_id }}
          AZURE_TENANT_ID: ${{ vars.azure_tenant_id }}
          MESSAGE_BROKER_URL: amqp://guest:guest@localhost:5672
          APP_NAME: destiny-repository-tests
          ENV: test
          OTEL_ENABLED: false
          FEATURE_FLAGS: '{"deduplication": "true"}'

        run: uv run pytest
