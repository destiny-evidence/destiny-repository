[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
dev = [
    "destiny-sdk",
    "faker>=37.3.0,<38",
    "msal>=1.31.1,<2",
    "mypy>=1.14.1,<2",
    "opentelemetry-instrumentation-aio-pika>=0.56b0,<0.57",
    "pre-commit>=4.2.0,<5",
    "psycopg>=3.2.6,<4",
    "pytest-asyncio>=1.0.0,<2",
    "pytest-httpx>=0.35.0,<0.36",
    "pytest>=8.3.4,<9",
    "ruff>=0.8.6,<0.9",
    "types-cachetools>=5.5.0.20240820,<6",
    "types-python-jose>=3.4.0.20250224,<4",
]
docs = [
    "autodoc_pydantic[erdantic]>=2.2.0,<3",
    "pydata-sphinx-theme>=0.16.1,<0.17",
    "sphinx>=8.2.3,<9",
    "sphinxcontrib-mermaid>=1.0.0,<2",
]
e2e = [
    "httpx>=0.28.1,<0.29",
    "psycopg>=3.2.6,<4",
    "pytest-order>=1.3.0,<2",
    "pytest>=8.3.4,<9",
]

[project]
authors = [
    {email = "adam@futureevidence.org", name = "Adam Hamilton"},
    {email = "andrew@futureevidence.org", name = "Andrew Harvey"},
    {email = "daniel@futureevidence.org", name = "Daniel Breves"},
    {email = "h.moss@ucl.ac.uk", name = "Harry Moss"},
    {email = "jack@futureevidence.org", name = "Jack Walmisley"},
]
dependencies = [
    "aiohttp==3.12.3",
    "alembic>=1.14.1,<2",
    "asyncpg>=0.30.0,<0.31",
    "azure-identity>=1.21.0,<2",
    "azure-servicebus>=7.14.2,<8",
    "azure-storage-blob>=12.25.1,<13",
    "cachetools>=5.5.2,<6",
    "destiny-sdk",
    "elasticsearch[async]>=9.0.2,<10",
    "fastapi[standard]>=0.115.6,<0.116",
    "frozenlist==1.6.0",
    "greenlet>=3.1.1,<4",
    "minio>=7.2.15,<8",
    "opentelemetry-distro>=0.56b0,<0.57",
    "opentelemetry-exporter-otlp>=1.35.0,<2",
    "opentelemetry-instrumentation-asyncio>=0.56b0,<0.57",
    "opentelemetry-instrumentation-fastapi>=0.56b0,<0.57",
    "opentelemetry-instrumentation-httpx>=0.56b0,<0.57",
    "opentelemetry-instrumentation-logging>=0.56b0,<0.57",
    "opentelemetry-instrumentation-sqlalchemy>=0.56b0,<0.57",
    "pydantic-settings>=2.7.1,<3",
    "pytest-env>=1.1.5,<2",
    "python-jose>=3.4.0,<4",
    "sqlalchemy-utils>=0.41.2,<0.42",
    "structlog>=25.1.0,<26",
    "taskiq-aio-pika>=0.4.1,<0.5",
    "taskiq[reload]>=0.11.16,<0.12",
    "uvloop>=0.21.0,<0.22",
]
description = ""
license = "AGPL-3.0-or-later"
name = "destiny-repository"
readme = "README.md"
requires-python = "~=3.12"
version = "1.0.0"

[tool.mypy]
explicit_package_bases = true
namespace_packages = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
addopts = ["--color=yes", "--import-mode=importlib", "--verbose"]
env = ["ENV=test"]
norecursedirs = ["tests/e2e"]
pythonpath = "."
testpaths = ["libs/sdk/tests", "tests"]

[tool.ruff]
extend-exclude = ["app/migrations/versions/*.py", "docs/*.py"]
fix = true
force-exclude = true
target-version = "py312"
lint.ignore = [
    "COM812", # trailing commas (ruff-format recommended)
    "D203", # no-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D407", # removed dashes lines under sections
    "D417", # argument description in docstring (unreliable)
    "FIX002", # implicit trust that TODOs are not trivial, or else they would be fixed
    "ISC001", # simplify implicit str concatenation (ruff-format recommended)
]
lint.per-file-ignores = {"*tests*" = [
    "ANN201", # No return type annotation. It's always None for tests.
    "INP001", # File is part of an implicit namespace package.
    "PLR2004", # Magic value used in comparison
    "S101", # Use of `assert` detected
    "S105", # hardcoded tokens
    "S106", # hardcoded passwords
], "*tests/unit*" = [
    "A002", # Mocking pydantic classes with built in classes causes shadows
    "ANN", # Relax type hinting constraints in unit tests
    "ARG002", # Unused arguments sometimes required for mocking
    "D", # Relax documentation constraints in unit tests
    "PLR0913", # Mocking pydantic classes can require many arguments
], "app/domain/*/routes.py" = [
    "PLR0913", # Dependencies create large function signatures
], "app/migrations/env.py" = [
    "F401", # imported but not used
], "libs/samples*" = [
    "INP001", # Standalone scripts, not a module
]}
lint.select = ["ALL"]
lint.mccabe.max-complexity = 18
lint.pep8-naming.classmethod-decorators = ["classmethod"]

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false

[tool.uv]
default-groups = [
    "dev",
    "docs",
    "e2e",
]
package = false

[tool.uv.sources]
destiny-sdk = {editable = true, path = "libs/sdk"}
