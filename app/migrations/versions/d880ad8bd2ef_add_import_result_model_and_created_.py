"""
add import_result model and created/updated timestamps

Revision ID: d880ad8bd2ef
Revises: de20026bc8e8
Create Date: 2025-03-25 04:05:30.130113+00:00

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd880ad8bd2ef'
down_revision: Union[str, None] = 'de20026bc8e8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('import_result',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('import_batch_id', sa.UUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('created', 'started', 'completed', 'cancelled', 'partially_failed', 'failed', name='import_result_status'), nullable=False),
    sa.Column('reference_id', sa.UUID(), nullable=False),
    sa.Column('failure_details', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['import_batch_id'], ['import_batch.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('import_batch', sa.Column('created_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('import_batch', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('import_record', sa.Column('created_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('import_record', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('import_record', 'updated_at')
    op.drop_column('import_record', 'created_at')
    op.drop_column('import_batch', 'updated_at')
    op.drop_column('import_batch', 'created_at')
    op.drop_table('import_result')
    # ### end Alembic commands ###
