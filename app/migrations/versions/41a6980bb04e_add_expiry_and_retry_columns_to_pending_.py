"""
add expiry and retry columns to pending_enhancement

Revision ID: 41a6980bb04e
Revises: 7afd162b774a
Create Date: 2025-10-24 04:43:12.676054+00:00

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = '41a6980bb04e'
down_revision: Union[str, None] = '7afd162b774a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. Manipulate enums
    op.execute("UPDATE pending_enhancement SET status = 'PROCESSING' WHERE status = 'ACCEPTED'")

    # 2. Add columns
    op.add_column('pending_enhancement', sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('pending_enhancement', sa.Column('retry_of', sa.UUID(), nullable=True))

    # 3. Set default values for existing rows
    op.execute("UPDATE pending_enhancement SET expires_at = '1970-01-01 00:00:00+00' WHERE expires_at IS NULL")

    # 4. Add constraints and indexes
    op.execute("ALTER TABLE pending_enhancement ALTER COLUMN expires_at SET NOT NULL")
    op.create_index('ix_pending_enhancement_processing', 'pending_enhancement', ['status'], unique=False, postgresql_where=sa.text("status = 'PROCESSING'"))
    op.create_foreign_key('fk_pending_enhancement_retry_of', 'pending_enhancement', 'pending_enhancement', ['retry_of'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_pending_enhancement_retry_of', 'pending_enhancement', type_='foreignkey')
    op.drop_index('ix_pending_enhancement_processing', table_name='pending_enhancement', postgresql_where=sa.text("status = 'PROCESSING'"))
    op.drop_column('pending_enhancement', 'retry_of')
    op.drop_column('pending_enhancement', 'expires_at')
    # ### end Alembic commands ###
