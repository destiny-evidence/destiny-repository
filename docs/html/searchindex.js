Search.setIndex({
  alltitles: {
    Callbacks: [[3, "callbacks"]],
    "Collision Handling": [[3, "collision-handling"]],
    "Contents:": [[0, null]],
    "DESTINY Repository documentation": [[0, null]],
    Entities: [[3, "entities"]],
    "File Format": [[3, "file-format"]],
    "Import Models Documentation": [[1, null]],
    "Importing References with Batches": [[3, null]],
    Participants: [
      [3, "participants"],
      [3, "id1"],
    ],
    "Reference Models Documentation": [[2, null]],
    "Table of Contents": [[3, "table-of-contents"]],
    "The Import Process": [[3, "the-import-process"]],
  },
  docnames: [
    "index",
    "models/imports",
    "models/references",
    "procedures/batch-importing",
  ],
  envversion: {
    sphinx: 65,
    "sphinx.domains.c": 3,
    "sphinx.domains.changeset": 1,
    "sphinx.domains.citation": 1,
    "sphinx.domains.cpp": 9,
    "sphinx.domains.index": 1,
    "sphinx.domains.javascript": 3,
    "sphinx.domains.math": 2,
    "sphinx.domains.python": 4,
    "sphinx.domains.rst": 2,
    "sphinx.domains.std": 2,
  },
  filenames: [
    "index.rst",
    "models/imports.rst",
    "models/references.rst",
    "procedures/batch-importing.rst",
  ],
  indexentries: {
    "app.domain.imports.models.models": [
      [1, "module-app.domain.imports.models.models", false],
    ],
    "batches (app.domain.imports.models.models.importrecord attribute)": [
      [1, "app.domain.imports.models.models.ImportRecord.batches", false],
    ],
    "callback_url (app.domain.imports.models.models.importbatchbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchBase.callback_url",
          false,
        ],
      ],
    "cancelled (app.domain.imports.models.models.importbatchstatus attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchStatus.CANCELLED",
          false,
        ],
      ],
    "cancelled (app.domain.imports.models.models.importrecordstatus attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportRecordStatus.CANCELLED",
          false,
        ],
      ],
    "cancelled (app.domain.imports.models.models.importresultstatus attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportResultStatus.CANCELLED",
          false,
        ],
      ],
    "collision_strategy (app.domain.imports.models.models.importbatchbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchBase.collision_strategy",
          false,
        ],
      ],
    "collisionstrategy (class in app.domain.imports.models.models)": [
      [1, "app.domain.imports.models.models.CollisionStrategy", false],
    ],
    "completed (app.domain.imports.models.models.importbatchstatus attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchStatus.COMPLETED",
          false,
        ],
      ],
    "completed (app.domain.imports.models.models.importrecordstatus attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportRecordStatus.COMPLETED",
          false,
        ],
      ],
    "completed (app.domain.imports.models.models.importresultstatus attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportResultStatus.COMPLETED",
          false,
        ],
      ],
    "created (app.domain.imports.models.models.importbatchstatus attribute)": [
      [1, "app.domain.imports.models.models.ImportBatchStatus.CREATED", false],
    ],
    "created (app.domain.imports.models.models.importrecordstatus attribute)": [
      [1, "app.domain.imports.models.models.ImportRecordStatus.CREATED", false],
    ],
    "created (app.domain.imports.models.models.importresultstatus attribute)": [
      [1, "app.domain.imports.models.models.ImportResultStatus.CREATED", false],
    ],
    "created_at (app.domain.imports.models.models.importbatchsummary attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchSummary.created_at",
          false,
        ],
      ],
    "discard (app.domain.imports.models.models.collisionstrategy attribute)": [
      [1, "app.domain.imports.models.models.CollisionStrategy.DISCARD", false],
    ],
    "expected_reference_count (app.domain.imports.models.models.importrecordbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportRecordBase.expected_reference_count",
          false,
        ],
      ],
    "fail (app.domain.imports.models.models.collisionstrategy attribute)": [
      [1, "app.domain.imports.models.models.CollisionStrategy.FAIL", false],
    ],
    "failed (app.domain.imports.models.models.importbatchstatus attribute)": [
      [1, "app.domain.imports.models.models.ImportBatchStatus.FAILED", false],
    ],
    "failed (app.domain.imports.models.models.importresultstatus attribute)": [
      [1, "app.domain.imports.models.models.ImportResultStatus.FAILED", false],
    ],
    "failure_details (app.domain.imports.models.models.importbatchsummary attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchSummary.failure_details",
          false,
        ],
      ],
    "failure_details (app.domain.imports.models.models.importresult attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportResult.failure_details",
          false,
        ],
      ],
    "id (app.domain.imports.models.models.importbatchsummary attribute)": [
      [1, "app.domain.imports.models.models.ImportBatchSummary.id", false],
    ],
    "import_batch (app.domain.imports.models.models.importresult attribute)": [
      [1, "app.domain.imports.models.models.ImportResult.import_batch", false],
    ],
    "import_batch_id (app.domain.imports.models.models.importbatchsummary attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchSummary.import_batch_id",
          false,
        ],
      ],
    "import_batch_id (app.domain.imports.models.models.importresultbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportResultBase.import_batch_id",
          false,
        ],
      ],
    "import_batch_status (app.domain.imports.models.models.importbatchsummary attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchSummary.import_batch_status",
          false,
        ],
      ],
    "import_record (app.domain.imports.models.models.importbatch attribute)": [
      [1, "app.domain.imports.models.models.ImportBatch.import_record", false],
    ],
    "import_record_id (app.domain.imports.models.models.importbatch attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatch.import_record_id",
          false,
        ],
      ],
    "import_results (app.domain.imports.models.models.importbatch attribute)": [
      [1, "app.domain.imports.models.models.ImportBatch.import_results", false],
    ],
    "importbatchstatus (class in app.domain.imports.models.models)": [
      [1, "app.domain.imports.models.models.ImportBatchStatus", false],
    ],
    "importrecordstatus (class in app.domain.imports.models.models)": [
      [1, "app.domain.imports.models.models.ImportRecordStatus", false],
    ],
    "importresultstatus (class in app.domain.imports.models.models)": [
      [1, "app.domain.imports.models.models.ImportResultStatus", false],
    ],
    "merge_aggressive (app.domain.imports.models.models.collisionstrategy attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.CollisionStrategy.MERGE_AGGRESSIVE",
          false,
        ],
      ],
    "merge_defensive (app.domain.imports.models.models.collisionstrategy attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.CollisionStrategy.MERGE_DEFENSIVE",
          false,
        ],
      ],
    module: [[1, "module-app.domain.imports.models.models", false]],
    "notes (app.domain.imports.models.models.importrecordbase attribute)": [
      [1, "app.domain.imports.models.models.ImportRecordBase.notes", false],
    ],
    "overwrite (app.domain.imports.models.models.collisionstrategy attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.CollisionStrategy.OVERWRITE",
          false,
        ],
      ],
    "partially_failed (app.domain.imports.models.models.importresultstatus attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportResultStatus.PARTIALLY_FAILED",
          false,
        ],
      ],
    "processor_name (app.domain.imports.models.models.importrecordbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportRecordBase.processor_name",
          false,
        ],
      ],
    "processor_version (app.domain.imports.models.models.importrecordbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportRecordBase.processor_version",
          false,
        ],
      ],
    "reference_id (app.domain.imports.models.models.importresult attribute)": [
      [1, "app.domain.imports.models.models.ImportResult.reference_id", false],
    ],
    "results (app.domain.imports.models.models.importbatchsummary attribute)": [
      [1, "app.domain.imports.models.models.ImportBatchSummary.results", false],
    ],
    "search_string (app.domain.imports.models.models.importrecordbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportRecordBase.search_string",
          false,
        ],
      ],
    "searched_at (app.domain.imports.models.models.importrecordbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportRecordBase.searched_at",
          false,
        ],
      ],
    "source_name (app.domain.imports.models.models.importrecordbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportRecordBase.source_name",
          false,
        ],
      ],
    "started (app.domain.imports.models.models.importbatchstatus attribute)": [
      [1, "app.domain.imports.models.models.ImportBatchStatus.STARTED", false],
    ],
    "started (app.domain.imports.models.models.importrecordstatus attribute)": [
      [1, "app.domain.imports.models.models.ImportRecordStatus.STARTED", false],
    ],
    "started (app.domain.imports.models.models.importresultstatus attribute)": [
      [1, "app.domain.imports.models.models.ImportResultStatus.STARTED", false],
    ],
    "status (app.domain.imports.models.models.importbatch attribute)": [
      [1, "app.domain.imports.models.models.ImportBatch.status", false],
    ],
    "status (app.domain.imports.models.models.importrecord attribute)": [
      [1, "app.domain.imports.models.models.ImportRecord.status", false],
    ],
    "status (app.domain.imports.models.models.importresultbase attribute)": [
      [1, "app.domain.imports.models.models.ImportResultBase.status", false],
    ],
    "storage_url (app.domain.imports.models.models.importbatchbase attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchBase.storage_url",
          false,
        ],
      ],
    "updated_at (app.domain.imports.models.models.importbatchsummary attribute)":
      [
        [
          1,
          "app.domain.imports.models.models.ImportBatchSummary.updated_at",
          false,
        ],
      ],
  },
  objects: {
    "app.domain.imports.models": [[1, 0, 0, "-", "models"]],
    "app.domain.imports.models.models": [
      [1, 1, 1, "", "CollisionStrategy"],
      [1, 3, 1, "", "ImportBatch"],
      [1, 3, 1, "", "ImportBatchBase"],
      [1, 3, 1, "", "ImportBatchCreate"],
      [1, 1, 1, "", "ImportBatchStatus"],
      [1, 3, 1, "", "ImportBatchSummary"],
      [1, 3, 1, "", "ImportRecord"],
      [1, 3, 1, "", "ImportRecordBase"],
      [1, 3, 1, "", "ImportRecordCreate"],
      [1, 1, 1, "", "ImportRecordStatus"],
      [1, 3, 1, "", "ImportResult"],
      [1, 3, 1, "", "ImportResultBase"],
      [1, 3, 1, "", "ImportResultCreate"],
      [1, 1, 1, "", "ImportResultStatus"],
    ],
    "app.domain.imports.models.models.CollisionStrategy": [
      [1, 2, 1, "", "DISCARD"],
      [1, 2, 1, "", "FAIL"],
      [1, 2, 1, "", "MERGE_AGGRESSIVE"],
      [1, 2, 1, "", "MERGE_DEFENSIVE"],
      [1, 2, 1, "", "OVERWRITE"],
    ],
    "app.domain.imports.models.models.ImportBatch": [
      [1, 4, 1, "", "import_record"],
      [1, 4, 1, "", "import_record_id"],
      [1, 4, 1, "", "import_results"],
      [1, 4, 1, "", "status"],
    ],
    "app.domain.imports.models.models.ImportBatchBase": [
      [1, 4, 1, "", "callback_url"],
      [1, 4, 1, "", "collision_strategy"],
      [1, 4, 1, "", "storage_url"],
    ],
    "app.domain.imports.models.models.ImportBatchStatus": [
      [1, 2, 1, "", "CANCELLED"],
      [1, 2, 1, "", "COMPLETED"],
      [1, 2, 1, "", "CREATED"],
      [1, 2, 1, "", "FAILED"],
      [1, 2, 1, "", "STARTED"],
    ],
    "app.domain.imports.models.models.ImportBatchSummary": [
      [1, 4, 1, "", "created_at"],
      [1, 4, 1, "", "failure_details"],
      [1, 4, 1, "", "id"],
      [1, 4, 1, "", "import_batch_id"],
      [1, 4, 1, "", "import_batch_status"],
      [1, 4, 1, "", "results"],
      [1, 4, 1, "", "updated_at"],
    ],
    "app.domain.imports.models.models.ImportRecord": [
      [1, 4, 1, "", "batches"],
      [1, 4, 1, "", "status"],
    ],
    "app.domain.imports.models.models.ImportRecordBase": [
      [1, 4, 1, "", "expected_reference_count"],
      [1, 4, 1, "", "notes"],
      [1, 4, 1, "", "processor_name"],
      [1, 4, 1, "", "processor_version"],
      [1, 4, 1, "", "search_string"],
      [1, 4, 1, "", "searched_at"],
      [1, 4, 1, "", "source_name"],
    ],
    "app.domain.imports.models.models.ImportRecordStatus": [
      [1, 2, 1, "", "CANCELLED"],
      [1, 2, 1, "", "COMPLETED"],
      [1, 2, 1, "", "CREATED"],
      [1, 2, 1, "", "STARTED"],
    ],
    "app.domain.imports.models.models.ImportResult": [
      [1, 4, 1, "", "failure_details"],
      [1, 4, 1, "", "import_batch"],
      [1, 4, 1, "", "reference_id"],
    ],
    "app.domain.imports.models.models.ImportResultBase": [
      [1, 4, 1, "", "import_batch_id"],
      [1, 4, 1, "", "status"],
    ],
    "app.domain.imports.models.models.ImportResultStatus": [
      [1, 2, 1, "", "CANCELLED"],
      [1, 2, 1, "", "COMPLETED"],
      [1, 2, 1, "", "CREATED"],
      [1, 2, 1, "", "FAILED"],
      [1, 2, 1, "", "PARTIALLY_FAILED"],
      [1, 2, 1, "", "STARTED"],
    ],
    "app.domain.references.models": [[2, 0, 0, "-", "models"]],
    "app.domain.references.models.models": [
      [2, 3, 1, "", "AbstractContentEnhancement"],
      [2, 1, 1, "", "AbstractProcessType"],
      [2, 3, 1, "", "Annotation"],
      [2, 3, 1, "", "AnnotationEnhancement"],
      [2, 1, 1, "", "AuthorPosition"],
      [2, 3, 1, "", "Authorship"],
      [2, 3, 1, "", "BibliographicMetadataEnhancement"],
      [2, 1, 1, "", "DriverVersion"],
      [2, 3, 1, "", "Enhancement"],
      [2, 3, 1, "", "EnhancementBase"],
      [2, 3, 1, "", "EnhancementContentBase"],
      [2, 3, 1, "", "EnhancementCreate"],
      [2, 3, 1, "", "EnhancementParseResult"],
      [2, 1, 1, "", "EnhancementType"],
      [2, 3, 1, "", "ExternalIdentifier"],
      [2, 3, 1, "", "ExternalIdentifierBase"],
      [2, 3, 1, "", "ExternalIdentifierCreate"],
      [2, 3, 1, "", "ExternalIdentifierParseResult"],
      [2, 3, 1, "", "ExternalIdentifierSearch"],
      [2, 1, 1, "", "ExternalIdentifierType"],
      [2, 3, 1, "", "Location"],
      [2, 3, 1, "", "LocationEnhancement"],
      [2, 3, 1, "", "Reference"],
      [2, 3, 1, "", "ReferenceBase"],
      [2, 3, 1, "", "ReferenceCreate"],
      [2, 3, 1, "", "ReferenceCreateInputValidator"],
      [2, 3, 1, "", "ReferenceCreateResult"],
      [2, 1, 1, "", "Visibility"],
    ],
    "app.domain.references.models.models.AbstractContentEnhancement": [
      [2, 4, 1, "", "abstract"],
      [2, 4, 1, "", "enhancement_type"],
      [2, 4, 1, "", "process"],
    ],
    "app.domain.references.models.models.AbstractProcessType": [
      [2, 2, 1, "", "CLOSED_API"],
      [2, 2, 1, "", "OTHER"],
      [2, 2, 1, "", "UNINVERTED"],
    ],
    "app.domain.references.models.models.Annotation": [
      [2, 4, 1, "", "annotation_type"],
      [2, 4, 1, "", "data"],
      [2, 4, 1, "", "label"],
    ],
    "app.domain.references.models.models.AnnotationEnhancement": [
      [2, 4, 1, "", "annotations"],
      [2, 4, 1, "", "enhancement_type"],
    ],
    "app.domain.references.models.models.AuthorPosition": [
      [2, 2, 1, "", "FIRST"],
      [2, 2, 1, "", "LAST"],
      [2, 2, 1, "", "MIDDLE"],
    ],
    "app.domain.references.models.models.Authorship": [
      [2, 4, 1, "", "display_name"],
      [2, 4, 1, "", "orcid"],
      [2, 4, 1, "", "position"],
    ],
    "app.domain.references.models.models.BibliographicMetadataEnhancement": [
      [2, 4, 1, "", "authorship"],
      [2, 4, 1, "", "cited_by_count"],
      [2, 4, 1, "", "created_date"],
      [2, 4, 1, "", "enhancement_type"],
      [2, 4, 1, "", "publication_date"],
      [2, 4, 1, "", "publication_year"],
      [2, 4, 1, "", "publisher"],
    ],
    "app.domain.references.models.models.DriverVersion": [
      [2, 2, 1, "", "ACCEPTED_VERSION"],
      [2, 2, 1, "", "OTHER"],
      [2, 2, 1, "", "PUBLISHED_VERSION"],
      [2, 2, 1, "", "SUBMITTED_VERSION"],
    ],
    "app.domain.references.models.models.Enhancement": [
      [2, 4, 1, "", "reference"],
      [2, 4, 1, "", "reference_id"],
    ],
    "app.domain.references.models.models.EnhancementBase": [
      [2, 5, 1, "", "check_enhancement_type"],
      [2, 4, 1, "", "content"],
      [2, 4, 1, "", "content_version"],
      [2, 4, 1, "", "enhancement_type"],
      [2, 4, 1, "", "processor_version"],
      [2, 4, 1, "", "source"],
      [2, 4, 1, "", "visibility"],
    ],
    "app.domain.references.models.models.EnhancementParseResult": [
      [2, 4, 1, "", "enhancement"],
      [2, 4, 1, "", "error"],
    ],
    "app.domain.references.models.models.EnhancementType": [
      [2, 2, 1, "", "ABSTRACT"],
      [2, 2, 1, "", "ANNOTATION"],
      [2, 2, 1, "", "BIBLIOGRAPHIC"],
      [2, 2, 1, "", "LOCATION"],
    ],
    "app.domain.references.models.models.ExternalIdentifier": [
      [2, 4, 1, "", "reference"],
      [2, 4, 1, "", "reference_id"],
    ],
    "app.domain.references.models.models.ExternalIdentifierBase": [
      [2, 4, 1, "", "identifier"],
      [2, 4, 1, "", "identifier_type"],
      [2, 4, 1, "", "other_identifier_name"],
      [2, 5, 1, "", "validate_identifier_format"],
      [2, 5, 1, "", "validate_other_identifier_name"],
    ],
    "app.domain.references.models.models.ExternalIdentifierParseResult": [
      [2, 4, 1, "", "error"],
      [2, 4, 1, "", "external_identifier"],
    ],
    "app.domain.references.models.models.ExternalIdentifierType": [
      [2, 2, 1, "", "DOI"],
      [2, 2, 1, "", "OPEN_ALEX"],
      [2, 2, 1, "", "OTHER"],
      [2, 2, 1, "", "PM_ID"],
    ],
    "app.domain.references.models.models.Location": [
      [2, 4, 1, "", "extra"],
      [2, 4, 1, "", "is_oa"],
      [2, 4, 1, "", "landing_page_url"],
      [2, 4, 1, "", "license"],
      [2, 4, 1, "", "pdf_url"],
      [2, 4, 1, "", "version"],
    ],
    "app.domain.references.models.models.LocationEnhancement": [
      [2, 4, 1, "", "enhancement_type"],
      [2, 4, 1, "", "locations"],
    ],
    "app.domain.references.models.models.Reference": [
      [2, 4, 1, "", "enhancements"],
      [2, 6, 1, "", "from_create"],
      [2, 4, 1, "", "identifiers"],
    ],
    "app.domain.references.models.models.ReferenceBase": [
      [2, 4, 1, "", "visibility"],
    ],
    "app.domain.references.models.models.ReferenceCreate": [
      [2, 4, 1, "", "enhancements"],
      [2, 4, 1, "", "identifiers"],
    ],
    "app.domain.references.models.models.ReferenceCreateInputValidator": [
      [2, 4, 1, "", "enhancements"],
      [2, 4, 1, "", "identifiers"],
    ],
    "app.domain.references.models.models.ReferenceCreateResult": [
      [2, 7, 1, "", "error_str"],
      [2, 4, 1, "", "errors"],
      [2, 4, 1, "", "reference"],
    ],
    "app.domain.references.models.models.Visibility": [
      [2, 2, 1, "", "HIDDEN"],
      [2, 2, 1, "", "PUBLIC"],
      [2, 2, 1, "", "RESTRICTED"],
    ],
  },
  objnames: {
    0: ["py", "module", "Python module"],
    1: ["py", "class", "Python class"],
    2: ["py", "attribute", "Python attribute"],
    3: ["py", "pydantic_model", "Python model"],
    4: ["py", "pydantic_field", "Python field"],
    5: ["py", "pydantic_validator", "Python validator"],
    6: ["py", "method", "Python method"],
    7: ["py", "property", "Python property"],
  },
  objtypes: {
    0: "py:module",
    1: "py:class",
    2: "py:attribute",
    3: "py:pydantic_model",
    4: "py:pydantic_field",
    5: "py:pydantic_validator",
    6: "py:method",
    7: "py:property",
  },
  terms: {
    "": [1, 2, 3],
    1: [1, 2],
    2: 2,
    2083: [1, 2],
    2410: 2,
    A: [1, 2],
    At: 1,
    By: 2,
    For: 2,
    If: [1, 2, 3],
    It: [1, 2],
    Its: 2,
    Not: 2,
    The: [1, 2],
    These: [1, 2],
    abc: 2,
    abl: 2,
    about: [1, 2],
    abstract: 2,
    abstractcontentenhanc: 2,
    abstractprocesstyp: 2,
    accept: [1, 2],
    accepted_vers: 2,
    acceptedvers: 2,
    access: 2,
    accord: [2, 3],
    account: 1,
    acquir: 2,
    acquyir: 2,
    ad: 1,
    addit: [1, 2],
    additionalproperti: [1, 2],
    after: 2,
    aggress: 1,
    alex: 1,
    all: 2,
    allow: [1, 2, 3],
    almost: 2,
    also: 2,
    altern: 3,
    an: [1, 2, 3],
    ani: [1, 2],
    annot: 2,
    annotation_typ: 2,
    annotationenhanc: 2,
    anyof: [1, 2],
    anyth: 2,
    api: [1, 2],
    app: [1, 2],
    applic: 3,
    ar: [1, 2, 3],
    arrai: [1, 2],
    articl: 2,
    assert: 2,
    associ: [1, 2],
    assum: 1,
    attempt: [1, 2],
    attribut: [1, 2],
    authent: 2,
    author: 2,
    authorit: 2,
    authorposit: 2,
    authorship: 2,
    auto: [1, 2],
    autogener: [1, 2],
    avail: 2,
    b: 2,
    backfil: 2,
    base: [1, 2],
    basemodel: 2,
    batch: [0, 1],
    been: 1,
    befor: 2,
    being: [1, 2],
    belong: 2,
    bibliograph: 2,
    bibliographicmetadata: 2,
    bibliographicmetadataenhanc: 2,
    bool: [1, 2],
    boolean: 2,
    borrow: 2,
    broken: 2,
    bulk: 3,
    call: 1,
    callback: 1,
    callback_url: 1,
    can: [2, 3],
    cancel: 1,
    carefulli: 1,
    carri: 2,
    case: 2,
    cc: 2,
    cc0: 2,
    chang: 2,
    check_enhancement_typ: 2,
    citat: 2,
    cite: 2,
    cited_by_count: 2,
    class: [1, 2],
    classmethod: 2,
    close: 2,
    closed_api: 2,
    collis: 1,
    collision_strategi: 1,
    collisionstrategi: [1, 3],
    com: 2,
    common: 2,
    compat: 3,
    complet: [1, 2],
    compos: 2,
    conduct: 1,
    confid: 2,
    config: [1, 2],
    consist: 2,
    consolid: 2,
    const: 2,
    constraint: [1, 2],
    content: 2,
    content_vers: 2,
    contribut: 2,
    control: 2,
    copi: 3,
    copyright: 2,
    core: 1,
    correctli: 2,
    count: [1, 2],
    cover: 2,
    creat: [1, 2],
    created_at: 1,
    created_d: 2,
    creation: [1, 2],
    creativ: 2,
    current: 1,
    data: [1, 2, 3],
    databas: [1, 2],
    date: [1, 2],
    datetim: 1,
    def: [1, 2],
    default: [1, 2, 3],
    defin: [1, 2],
    delet: 1,
    describ: [1, 2],
    descript: [1, 2, 3],
    desir: 3,
    destini: 3,
    detail: [1, 2],
    detect: 1,
    determin: 2,
    dict: [1, 2],
    differ: 2,
    digit: 2,
    directli: 2,
    directori: 3,
    discard: 1,
    discrimin: 2,
    discuss: 2,
    displai: 2,
    display_nam: 2,
    do: [1, 2, 3],
    doc: 2,
    document: 3,
    doi: 2,
    domain: [1, 2],
    domainbasemodel: [1, 2],
    driver: 2,
    driververs: 2,
    due: 2,
    dure: [1, 2],
    e: 3,
    each: [1, 3],
    effect: 2,
    eg: 1,
    element: 2,
    encount: 2,
    endpoint: 3,
    enhanc: [1, 2, 3],
    enhancement_typ: 2,
    enhancementbas: 2,
    enhancementcontentbas: 2,
    enhancementcr: 2,
    enhancementparseresult: 2,
    enhancementtyp: 2,
    ensur: 2,
    entiti: 2,
    entri: 1,
    enum: [1, 2],
    error: 2,
    error_str: 2,
    essenti: 1,
    exactli: 2,
    exampl: 2,
    exist: [1, 2, 3],
    expect: 1,
    expected_reference_count: 1,
    extern: 2,
    external_identifi: 2,
    externalidentifi: 2,
    externalidentifierbas: 2,
    externalidentifiercr: 2,
    externalidentifierparseresult: 2,
    externalidentifiersearch: 2,
    externalidentifiertyp: 2,
    extra: 2,
    fail: 1,
    failur: 1,
    failure_detail: [1, 3],
    fals: 2,
    field: [1, 2],
    fieldinfo: 2,
    file: 1,
    find: 2,
    first: 2,
    flatten: 2,
    follow: [1, 3],
    forbid: 2,
    form: 2,
    format: [1, 2],
    found: [2, 3],
    free: 2,
    from: [1, 2, 3],
    from_attribut: [1, 2],
    from_creat: 2,
    futur: 2,
    g: 3,
    ge: 1,
    gener: [1, 2],
    get: 3,
    github: 2,
    govern: 2,
    guidelin: 2,
    ha: [1, 2, 3],
    handl: [],
    have: 2,
    hidden: 2,
    high: 2,
    http: [2, 3],
    httpurl: [1, 2],
    hydrat: 2,
    i: [1, 2, 3],
    id: [1, 2],
    identifi: [1, 2, 3],
    identifier_typ: 2,
    implement: 2,
    import: 0,
    import_batch: 1,
    import_batch_id: 1,
    import_batch_statu: 1,
    import_record: 1,
    import_record_id: 1,
    import_result: 1,
    importbatch: 1,
    importbatchbas: 1,
    importbatchcr: 1,
    importbatchstatu: 1,
    importbatchsummari: [1, 3],
    importrecord: 1,
    importrecordbas: 1,
    importrecordcr: 1,
    importrecordstatu: 1,
    importresult: 1,
    importresultbas: 1,
    importresultcr: 1,
    importresultstatu: 1,
    includ: [1, 2],
    incom: 1,
    increasingli: 2,
    increment: 3,
    inform: [1, 2],
    inherit: 2,
    initi: 2,
    input: [1, 2],
    int: [1, 2],
    integ: [1, 2],
    interchang: 2,
    intern: 1,
    is_oa: 2,
    iso8601: 2,
    issu: 1,
    item: [1, 2],
    its: [1, 3],
    itself: 2,
    json: [1, 2, 3],
    jsonl: [1, 3],
    keep: 1,
    kind: 2,
    known: 1,
    label: 2,
    lack: 2,
    land: 2,
    landing_page_url: 2,
    larger: 1,
    last: [1, 2],
    later: 2,
    layer: 2,
    left: 2,
    level: 2,
    licens: 2,
    like: 2,
    limit: 2,
    line: [1, 3],
    list: [1, 2],
    liter: 2,
    locat: 2,
    locationenhanc: 2,
    made: 2,
    mai: 2,
    manag: 2,
    map: 2,
    mark: 1,
    match: 2,
    maxlength: [1, 2],
    mean: 2,
    merg: 1,
    merge_aggress: 1,
    merge_defens: 1,
    mesh: 2,
    metadata: 2,
    middl: 2,
    min_length: 2,
    mine: 2,
    minimum: 1,
    minio: 3,
    minitem: 2,
    minlength: [1, 2],
    miss: 2,
    model: 0,
    more: 1,
    most: 2,
    must: [2, 3],
    n: [1, 2],
    n1: 2,
    n2: 2,
    na: 2,
    nallow: 2,
    name: [1, 2],
    nan: [1, 2],
    nani: 1,
    narticl: 2,
    nat: 2,
    nauthorit: 2,
    nbackfil: 2,
    nbe: [],
    nbefor: 2,
    nclass: 2,
    ncommon: 2,
    ncontent: 2,
    ndata: 1,
    ndefault: 1,
    ndescript: 2,
    ndocument: 2,
    need: 2,
    nenhanc: 2,
    network: [1, 2],
    new: 2,
    nfield: [],
    nfile: 1,
    nfor: 2,
    ngener: 2,
    ni: 1,
    nidentifi: 2,
    nif: 2,
    nimport: 1,
    niniti: 2,
    nissu: 1,
    nit: 1,
    nlater: 2,
    nmap: 2,
    nmore: [],
    nn: 2,
    nnot: 2,
    nobject: 2,
    nof: 1,
    noffici: 2,
    none: [1, 2],
    nonetyp: 2,
    nopenalex: 2,
    note: 1,
    noth: [1, 3],
    nother: 2,
    notifi: 3,
    nrefer: [1, 2],
    nrestrict: 2,
    nruntim: 2,
    nsee: [],
    nthe: [1, 2],
    nthese: 1,
    nthi: [1, 2],
    ntodo: 2,
    ntreat: 2,
    null: [1, 2],
    number: [1, 2],
    nwere: 2,
    nwhich: 2,
    oa: 2,
    object: [1, 2, 3],
    occur: 1,
    offici: 2,
    one: 1,
    oneof: 2,
    onli: 2,
    open: [1, 2],
    open_alex: 2,
    openalex: [2, 3],
    option: [1, 2, 3],
    orcid: 2,
    org: 2,
    other: 2,
    other_identifier_nam: 2,
    our: 2,
    outcom: 1,
    overwrit: 1,
    page: 2,
    paramet: 3,
    parent: [1, 2],
    pars: 2,
    part: 1,
    partially_fail: 1,
    particip: [],
    pass: 2,
    pastdat: 2,
    pastdatetim: 1,
    pdf: 2,
    pdf_url: 2,
    peer: 2,
    per: 3,
    perform: 1,
    pik: 3,
    pm_id: 2,
    pmid: 2,
    popul: 2,
    posit: 2,
    post: 3,
    prepar: 3,
    priorit: 1,
    probabl: 2,
    process: [1, 2],
    processor: [1, 2],
    processor_nam: 1,
    processor_vers: [1, 2],
    produc: 1,
    properti: [1, 2],
    propertynam: [1, 2],
    proven: [1, 2],
    provid: [2, 3],
    public: 2,
    publication_d: 2,
    publication_year: 2,
    publicli: 2,
    publish: 2,
    published_vers: 2,
    publishedvers: 2,
    pubm: 2,
    purpos: 2,
    py: [1, 2],
    pydant: [1, 2],
    reason: [1, 2],
    receiv: 3,
    record: [1, 2, 3],
    recreat: 1,
    ref: [1, 2],
    refer: [0, 1],
    reference_cr: 2,
    reference_id: [1, 2],
    referencebas: 2,
    referencecr: [2, 3],
    referencecreateinputvalid: 2,
    referencecreateresult: 2,
    regard: 1,
    regener: 2,
    repo: [1, 3],
    repositori: [2, 3],
    repres: 2,
    represent: 2,
    request: 3,
    requir: [1, 2],
    respons: 3,
    restrict: 2,
    result: [1, 2],
    return: 2,
    review: 2,
    runtim: 2,
    same: 3,
    sampl: 3,
    schema: [1, 2],
    scheme: 2,
    score: 2,
    search: [1, 2],
    search_str: 1,
    searched_at: 1,
    see: 1,
    self: 2,
    send: 1,
    separ: 2,
    set: [1, 2],
    should: [1, 2],
    show: [1, 2],
    significantli: 2,
    similar: 2,
    simplif: 2,
    singl: [1, 2],
    solr: 3,
    some: 2,
    sourc: [1, 2, 3],
    source_nam: 1,
    sparingli: [1, 2],
    specif: 2,
    sqlattributemixin: [1, 2],
    start: 1,
    statu: 1,
    storag: [1, 3],
    storage_url: 1,
    store: [1, 3],
    str: [1, 2],
    strategi: [1, 3],
    strenum: [1, 2],
    string: [1, 2],
    subject: 2,
    submit: 2,
    submitted_vers: 2,
    submittedvers: 2,
    successfulli: 2,
    suffici: 2,
    summari: [1, 3],
    summaris: 1,
    system: 2,
    tag: 2,
    thank: 2,
    thei: [1, 2],
    themselv: 2,
    thi: [1, 2, 3],
    thu: 2,
    tie: 2,
    time: [1, 2],
    timestamp: 1,
    timezon: 1,
    titl: [1, 2],
    todo: 2,
    togeth: [1, 2],
    top: 2,
    topic: 2,
    track: [1, 2],
    treat: 2,
    true: [1, 2],
    two: 2,
    type: [1, 2],
    u: 1,
    understand: 1,
    undocu: 2,
    uninvert: 2,
    uniqu: 2,
    unknown: [1, 2],
    up: [1, 2, 3],
    updat: [1, 3],
    updated_at: 1,
    upload: 1,
    uri: [1, 2],
    url: [1, 2],
    us: [1, 2, 3],
    utc: 1,
    uuid: [1, 2],
    valid: 2,
    validate_identifier_format: 2,
    validate_other_identifier_nam: 2,
    valu: [1, 2],
    version: [1, 2],
    view: 1,
    visibl: 2,
    wa: [1, 2],
    wai: 2,
    we: 2,
    well: 1,
    were: 2,
    what: 1,
    when: [1, 2],
    where: [1, 2, 3],
    whether: 2,
    which: [1, 2],
    within: [1, 2],
    without: 2,
    work: 2,
    wrap: 1,
    x: 1,
    year: 2,
    you: 2,
  },
  titles: [
    "DESTINY Repository documentation",
    "Import Models Documentation",
    "Reference Models Documentation",
    "Importing References with Batches",
  ],
  titleterms: {
    The: 3,
    batch: 3,
    callback: 3,
    collis: 3,
    content: [0, 3],
    destini: 0,
    document: [0, 1, 2],
    entiti: 3,
    file: 3,
    format: 3,
    handl: 3,
    import: [1, 3],
    model: [1, 2],
    particip: 3,
    process: 3,
    refer: [2, 3],
    repositori: 0,
    tabl: 3,
  },
});
