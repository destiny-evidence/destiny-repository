name: E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.rst"

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          cat <<EOF > .env
          APP_NAME=destiny-repository-e2e-tests
          DB_CONFIG=overwritten-in-docker-compose-e2e
          ES_CONFIG=overwritten-in-docker-compose-e2e
          AZURE_APPLICATION_ID=00000000-0000-0000-0000-000000000000
          AZURE_LOGIN_URL=https://login.microsoftonline.com
          AZURE_TENANT_ID=00000000-0000-0000-0000-000000000000
          ENV=local
          CLI_CLIENT_ID=00000000-0000-0000-0000-000000000000
          MESSAGE_BROKER_URL=overwritten-in-docker-compose-e2e
          MESSAGE_BROKER_NAMESPACE=destiny-repository-staging.servicebus.windows.net
          MESSAGE_BROKER_QUEUE_NAME=taskiq
          ELASTIC_MEM_LIMIT=1073741824 # 1GiB for those playing at home
          ELASTIC_STACK_VERSION=9.0.0
          ELASTIC_PASSWORD="destiny"
          LICENSE=basic
          ES_PORT=9200
          KIBANA_PORT=5601
          KIBANA_PASSWORD="destiny"
          ES_CLUSTER_NAME="docker-cluster"
          EOF

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Remove database volume
        run: |
          # Had a weird issue with the DB persisting data between runs, sporadically
          docker compose down -v
          docker volume rm destiny-repository_db_data || true

      # Required if another github image is to be built
      # - name: Set up SSH agent
      #   uses: webfactory/ssh-agent@v0.8.0
      #   with:
      #     ssh-private-key: ${{ secrets.YOUR_PRIVATE_KEY }}

      # - name: Set up Docker BuildKit
      #   run: echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV

      # - name: Build with SSH agent forwarding
      #   run: |
      #     docker compose -f docker-compose.yml -f docker-compose.e2e.yml build --ssh default

      - name: Build
        run: |
          docker compose -f docker-compose.yml -f docker-compose.e2e.yml up -d

      - name: Wait for e2e container to finish
        run: |
          while [ "$(docker inspect -f '{{.State.Status}}' e2e 2>/dev/null)" != "exited" ]; do
            sleep 5
          done

      - name: Collect all logs
        if: always()
        run: |
          sleep 5
          # Save full logs from all services
          docker compose -f docker-compose.yml -f docker-compose.e2e.yml logs > logs.txt

      - name: Save logs to artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-logs
          path: logs.txt

      - name: Check e2e container exit code
        run: |
          EXIT_CODE=$(docker inspect -f '{{.State.ExitCode}}' e2e)
          grep -E "e2e|repository|e2e-task-worker" logs.txt
          if [ "$EXIT_CODE" -ne 0 ]; then
            echo "E2E tests failed with exit code $EXIT_CODE"
            exit 1
          fi
          echo "E2E tests passed"

      - name: Clean up Docker Compose
        if: always()
        run: docker compose down -v
