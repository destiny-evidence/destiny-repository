services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: localuser
      POSTGRES_PASSWORD: localpass
      POSTGRES_DB: destiny_dev
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "destiny_dev", "-U", "localuser"]
      interval: 2s
      timeout: 2s
      retries: 5
  fs:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: localuser
      MINIO_ROOT_PASSWORD: localpass
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - fs_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 2s
      timeout: 2s
      retries: 5
  http:
    image: hashicorp/http-echo:latest
    ports:
      - "5678:5678"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    profiles:
      - optional
    build:
      context: .
      args:
        POETRY_INSTALL_DEV: "true"
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      fs:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - MESSAGE_BROKER_URL=amqp://guest:guest@rabbitmq:5672
      - DB_URL=postgresql+asyncpg://localuser:localpass@db:5432/destiny_dev
    entrypoint: fastapi dev app/main.py --host 0.0.0.0 --port 8000

  worker:
    profiles:
      - optional
    build:
      context: .
      args:
        POETRY_INSTALL_DEV: "true"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      - MESSAGE_BROKER_URL=amqp://guest:guest@rabbitmq:5672
      - DB_URL=postgresql+asyncpg://localuser:localpass@db:5432/destiny_dev
    entrypoint: taskiq worker app.tasks:broker --fs-discover --reload

volumes:
  db_data:
  rabbitmq_data:
  fs_data:
