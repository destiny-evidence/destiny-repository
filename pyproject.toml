[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.mypy]
explicit_package_bases = true
plugins = ["pydantic.mypy"]

[tool.poetry]
authors = [
    "Andrew Harvey <aharvey@futureevidence.org>",
    "Harry Moss <h.moss@ucl.ac.uk",
]
description = ""
name = "destiny-repository"
package-mode = false
readme = "README.md"

[tool.poetry.dependencies]
alembic = "^1.14.1"
asyncpg = "^0.30.0"
cachetools = "^5.5.2"
fastapi = {extras = ["standard"], version = "^0.115.6"}
greenlet = "^3.1.1"
pydantic-settings = "^2.7.1"
python = "^3.12"
python-jose = "^3.4.0"
sqlalchemy-utils = "^0.41.2"
structlog = "^25.1.0"
uvloop = "^0.21.0"

[tool.poetry.group.dev.dependencies]
msal = "^1.31.1"
mypy = "^1.14.1"
pre-commit = "^4.0.1"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"
pytest-httpx = "^0.35.0"
ruff = "^0.8.6"
types-cachetools = "^5.5.0.20240820"
types-python-jose = "^3.4.0.20250224"

[tool.pytest.ini_options]
addopts = ["--color=yes", "--import-mode=importlib", "--verbose"]
pythonpath = "."
testpaths = ["tests"]

[tool.ruff]
extend-exclude = ["app/migrations/versions/*.py"]
fix = true
force-exclude = true
target-version = "py312"
lint.ignore = [
    "COM812", # trailing commas (ruff-format recommended)
    "D203", # no-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D407", # removed dashes lines under sections
    "D417", # argument description in docstring (unreliable)
    "FIX002", # implicit trust that TODOs are not trivial, or else they would be fixed
    "ISC001", # simplify implicit str concatenation (ruff-format recommended)
]
lint.per-file-ignores = {"app/migrations/env.py" = [
    "F401", # imported but not used
], "tests*" = [
    "ANN201", # No return type annotation. It's always None for tests.
    "INP001", # File is part of an implicit namespace package.
    "PLR2004", # Magic value used in comparison
    "S101", # Use of `assert` detected
], "tests/unit*" = [
    "A002", # Mocking pydantic classes with built in classes causes shadows
    "ANN", # Relax type hinting constraints in unit tests
    "ARG002", # Unused arguments sometimes required for mocking
    "D", # Relax documentation constraints in unit tests
    "PLR0913", # Mocking pydantic classes can require many arguments
]}
lint.select = ["ALL"]
lint.mccabe.max-complexity = 18
lint.pep8-naming.classmethod-decorators = ["classmethod"]

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false
