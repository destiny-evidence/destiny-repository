"""
add reference_duplicate_decision table

Revision ID: 6c3d59783d91
Revises: e28cce22a108
Create Date: 2025-09-11 05:57:52.289905+00:00

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6c3d59783d91'
down_revision: Union[str, None] = 'e28cce22a108'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reference_duplicate_decision',
    sa.Column('reference_id', sa.UUID(), nullable=False),
    sa.Column('enhancement_id', sa.UUID(), nullable=True),
    sa.Column('active_decision', sa.Boolean(), nullable=False),
    sa.Column('candidate_duplicate_ids', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('duplicate_determination', postgresql.ENUM('pending', 'nominated', 'duplicate', 'exact_duplicate', 'canonical', 'unresolved', 'unsearchable', 'decoupled', name='duplicate_determination'), nullable=False),
    sa.Column('canonical_reference_id', sa.UUID(), nullable=True),
    sa.Column('detail', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['canonical_reference_id'], ['reference.id'], ),
    sa.ForeignKeyConstraint(['enhancement_id'], ['enhancement.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_reference_duplicate_decision_reference_id', 'reference_duplicate_decision', ['reference_id'], unique=False)
    op.create_index('uix_reference_one_active_decision_constraint', 'reference_duplicate_decision', ['reference_id', 'active_decision'], unique=True, postgresql_where=sa.text('active_decision IS true'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('uix_reference_one_active_decision_constraint', table_name='reference_duplicate_decision', postgresql_where=sa.text('active_decision IS true'))
    op.drop_index('ix_reference_duplicate_decision_reference_id', table_name='reference_duplicate_decision')
    op.drop_table('reference_duplicate_decision')
    op.execute('DROP TYPE duplicate_determination')
    # ### end Alembic commands ###
