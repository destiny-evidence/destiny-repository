DO $$
BEGIN
  -- Grant read-only access
  IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = '${db_readonly_group_id}') THEN
    CREATE ROLE "${db_readonly_group_id}";
  END IF;
  GRANT CONNECT ON DATABASE "${database_name}" TO "${db_readonly_group_id}";
  GRANT USAGE ON SCHEMA public TO "${db_readonly_group_id}";
  GRANT SELECT ON ALL TABLES IN SCHEMA public TO "${db_readonly_group_id}";
  ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO "${db_readonly_group_id}";

  -- Grant CRUD access
  IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = '${db_crud_group_id}') THEN
    CREATE ROLE "${db_crud_group_id}";
  END IF;
  GRANT CONNECT ON DATABASE "${database_name}" TO "${db_crud_group_id}";
  GRANT USAGE ON SCHEMA public TO "${db_crud_group_id}";
  GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO "${db_crud_group_id}";
  ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO "${db_crud_group_id}";

  -- Grant admin access
  IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = '${db_admin_group_id}') THEN
    CREATE ROLE "${db_admin_group_id}";
  END IF;
  GRANT ALL PRIVILEGES ON DATABASE "${database_name}" TO "${db_admin_group_id}";
  GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO "${db_admin_group_id}";
  ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO "${db_admin_group_id}";
END
$$;
