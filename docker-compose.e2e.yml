services:
  db:
    # Override the volume to use ephemeral storage for e2e tests
    volumes:
      - db_data:/var/lib/postgresql/data
    # Emphasize clean state for tests
    command: postgres -c fsync=off
  fs:
    volumes:
      - /data
  fs-seed:
    image: minio/mc
    depends_on:
      fs:
        condition: service_healthy
    volumes:
      - ./.minio:/.minio
      - shared-minio:/shared-minio
    environment:
      MINIO_URL: "http://fs:9000"
      MINIO_ROOT_USER: localuser
      MINIO_ROOT_PASSWORD: localpass
      MINIO_SEED_DATA_DIR: .minio/data
      MINIO_PRESIGNED_URL_FILEPATH: /shared-minio/presigned_urls.json
    entrypoint: ./.minio/seed_fileserver.sh
  db-seed:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_CONFIG: '{"DB_URL": "postgresql+asyncpg://localuser:localpass@db:5432/destiny_dev"}'
      ENV: "test"
      AZURE_APPLICATION_ID: "dummy"
      AZURE_TENANT_ID: "dummy"
      APP_NAME: "dummy"
      ES_CONFIG: '{"ES_URL": "https://elasticsearch:9200", "ES_USER": "dummy", "ES_PASS": "dummy", "ES_CA_PATH": "/.dockerenv"}'
    entrypoint: alembic upgrade head
  repository:
    build:
      context: .
      dockerfile: Dockerfile
    image: destiny-repository
    depends_on:
      db-seed:
        condition: service_completed_successfully
      fs-seed:
        condition: service_completed_successfully
      http:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./app:/src/app
      - ./libs/sdk:/app/libs/sdk
      - certs:/app/certs
    env_file:
      - .env
    environment:
      # Overwrite with docker network hostname
      MESSAGE_BROKER_URL: amqp://guest:guest@rabbitmq:5672
      DB_CONFIG: '{"DB_URL":"postgresql+asyncpg://localuser:localpass@db:5432/destiny_dev"}'
      MINIO_CONFIG: '{"HOST":"fs:9000", "ACCESS_KEY": "localuser", "SECRET_KEY": "localpass"}'
      ES_CONFIG: '{"ES_URL": "https://elasticsearch:9200", "ES_USER": "elastic", "ES_PASS": "destiny", "ES_CA_PATH": "/app/certs/ca/ca.crt"}'
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import socket; sock = socket.create_connection(('localhost',8000), 2); sock.close()",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
  e2e-task-worker:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./libs/sdk:/app/libs/sdk
      - certs:/app/certs
    env_file:
      - .env
    environment:
      MESSAGE_BROKER_URL: amqp://guest:guest@rabbitmq:5672
      DB_CONFIG: '{"DB_URL":"postgresql+asyncpg://localuser:localpass@db:5432/destiny_dev"}'
      MINIO_CONFIG: '{"HOST":"fs:9000", "ACCESS_KEY": "localuser", "SECRET_KEY": "localpass"}'
      ES_CONFIG: '{"ES_URL": "https://elasticsearch:9200", "ES_USER": "elastic", "ES_PASS": "destiny", "ES_CA_PATH": "/app/certs/ca/ca.crt"}'
    entrypoint: taskiq worker app.tasks:broker --tasks-pattern app/**/tasks.py --fs-discover
  # Excluded by default until open sourced
  # toy-robot:
  #   build:
  #     context: git@github.com:destiny-evidence/toy-robot.git
  #     ssh: [default]
  #   environment:
  #     DESTINY_REPOSITORY_URL: "http://repository:8000"
  #     ENV: "test"
  #     ROBOT_ID: "1ee5aa1f-3248-4d21-9fee-718d4ff0ba5f" # Just a dummy, won't be used.
  #     ROBOT_SECRET: "dummy"
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "python",
  #         "-c",
  #         "import socket; sock = socket.create_connection(('localhost',8001), 2); sock.close()",
  #       ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5
  e2e:
    container_name: e2e
    build:
      context: .
      dockerfile: Dockerfile.e2e
    volumes:
      - ./tests/e2e:/e2e
      - certs:/usr/share/elasticsearch/config/certs
      - shared-minio:/shared-minio
    ports:
      - 8001:8001
    depends_on:
      repository:
        condition: service_healthy
      e2e-task-worker:
        condition: service_started
      # toy-robot:
      #   condition: service_healthy
    environment:
      DB_URL: "postgresql+psycopg://localuser:localpass@db:5432/destiny_dev"
      REPO_URL: "http://repository:8000"
      HTTP_CLIENT_URL: "http://http:5678"
      MINIO_URL: "http://fs:9000"
      CALLBACK_URL: "http://e2e:8001"
      ES_URL: "https://elasticsearch:9200"
      ES_CA_PATH: /usr/share/elasticsearch/config/certs/ca/ca.crt
      ES_USER: "elastic"
      ES_PASS: "destiny"
      TOY_ROBOT_URL: "http://toy-robot:8001/toy/enhancement/"
      ENV: "test"
      MINIO_PRESIGNED_URL_FILEPATH: /shared-minio/presigned_urls.json
    entrypoint: poetry run pytest /e2e

# Use ephemeral volumes for tests
volumes:
  shared-minio:
  db_data:
