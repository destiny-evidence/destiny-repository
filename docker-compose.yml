services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: localuser
      POSTGRES_PASSWORD: localpass
      POSTGRES_DB: destiny_dev
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "destiny_dev", "-U", "localuser"]
      interval: 2s
      timeout: 2s
      retries: 5
  fs:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: localuser
      MINIO_ROOT_PASSWORD: localpass
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - fs_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 2s
      timeout: 2s
      retries: 5
  http:
    image: hashicorp/http-echo:latest
    ports:
      - "5678:5678"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  app:
    profiles:
      - optional
    build:
      context: .
      args:
        POETRY_INSTALL_DEV: "true"
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    entrypoint: fastapi dev app/main.py --host 0.0.0.0 --port 8000

  celery:
    profiles:
      - optional
    build:
      context: .
      args:
        POETRY_INSTALL_DEV: "true"
    depends_on:
      - redis
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    entrypoint: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A app.tasks worker --loglevel=INFO

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  app:
    profiles:
      - optional
    build:
      context: .
      args:
        POETRY_INSTALL_DEV: "true"
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    entrypoint: fastapi dev app/main.py --host 0.0.0.0 --port 8000

  celery:
    profiles:
      - optional
    build:
      context: .
      args:
        POETRY_INSTALL_DEV: "true"
    depends_on:
      - redis
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    entrypoint: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A app.tasks worker --loglevel=INFO

volumes:
  db_data:
  fs_data:
