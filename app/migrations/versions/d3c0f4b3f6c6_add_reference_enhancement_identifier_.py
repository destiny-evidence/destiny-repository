"""
add reference, enhancement, identifier models

Revision ID: d3c0f4b3f6c6
Revises: 98dba5c89f15
Create Date: 2025-04-01 04:21:33.692172+00:00

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd3c0f4b3f6c6'
down_revision: Union[str, None] = '98dba5c89f15'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reference',
    sa.Column('visibility', postgresql.ENUM('public', 'restricted', 'hidden', name='visibility'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enhancement',
    sa.Column('visibility', postgresql.ENUM('public', 'restricted', 'hidden', name='visibility'), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('reference_id', sa.UUID(), nullable=False),
    sa.Column('enhancement_type', postgresql.ENUM('bibliographic', 'abstract', 'annotation', 'location', name='enhancement_type'), nullable=False),
    sa.Column('processor_version', sa.String(), nullable=True),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('content_version', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('external_identifier',
    sa.Column('reference_id', sa.UUID(), nullable=False),
    sa.Column('identifier_type', postgresql.ENUM('doi', 'pm_id', 'open_alex', 'other', name='external_identifier_type'), nullable=False),
    sa.Column('other_identifier_name', sa.String(), nullable=True),
    sa.Column('identifier', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('external_identifier')
    op.drop_table('enhancement')
    op.drop_table('reference')
    # ### end Alembic commands ###
