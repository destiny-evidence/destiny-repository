name: Promote to Production

concurrency: promote

on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  tag-image-for-prod:
    if: github.ref == 'refs/heads/main' # Only run on main
    name: "Add production tag to image"
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: .
      - name: "Az CLI login"
        uses: azure/login@v2.1.0
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      - name: Azure Docker Login
        id: acr_login
        uses: Azure/cli@v2.0.0
        with:
          inlineScript: |
            {
              echo "docker_token<<EOF"
              echo "$(az acr login -n ${{vars.REGISTRY_NAME}} --expose-token --output tsv --query accessToken)"
              echo "EOF"
            } >> $GITHUB_OUTPUT
      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{vars.REGISTRY_NAME}}.azurecr.io
          username: 00000000-0000-0000-0000-000000000000
          password: ${{ steps.acr_login.outputs.docker_token }}
      - name: Tag image with production tag for init container
        run: |
          sha_short=$(git rev-parse --short HEAD)
          docker pull ${{vars.REGISTRY_NAME}}.azurecr.io/${{vars.APP_NAME}}:$sha_short
          docker tag ${{vars.REGISTRY_NAME}}.azurecr.io/${{vars.APP_NAME}}:$sha_short ${{vars.REGISTRY_NAME}}.azurecr.io/${{vars.APP_NAME}}:${{ vars.ENVIRONMENT_NAME }}
          docker push ${{vars.REGISTRY_NAME}}.azurecr.io/${{vars.APP_NAME}}:${{ vars.ENVIRONMENT_NAME }}
  deploy-production:
    if: github.ref == 'refs/heads/main' # Only run on main
    name: "Deploy Container"
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: .
      - name: "Az CLI login"
        uses: azure/login@v2.1.0
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      - name: Set job env
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Deploy built image to app container
        uses: Azure/container-apps-deploy-action@v1
        with:
          acrName: ${{vars.REGISTRY_NAME}}
          containerAppName: ${{vars.CONTAINER_APP_NAME}}
          resourceGroup: ${{vars.RESOURCE_GROUP}}
          containerAppEnvironment: ${{vars.CONTAINER_APP_ENV}}
          imageToDeploy: ${{vars.REGISTRY_NAME}}.azurecr.io/${{vars.APP_NAME}}:${{ steps.vars.outputs.sha_short }}
      - name: Deploy built image to tasks container
        uses: Azure/container-apps-deploy-action@v1
        with:
          acrName: ${{vars.REGISTRY_NAME}}
          containerAppName: ${{vars.CONTAINER_APP_TASKS_NAME}}
          resourceGroup: ${{vars.RESOURCE_GROUP}}
          containerAppEnvironment: ${{vars.CONTAINER_APP_ENV}}
          imageToDeploy: ${{vars.REGISTRY_NAME}}.azurecr.io/${{vars.APP_NAME}}:${{ steps.vars.outputs.sha_short }}
