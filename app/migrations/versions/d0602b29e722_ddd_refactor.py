"""
DDD refactor

Revision ID: d0602b29e722
Revises: 8fb8831fb527
Create Date: 2025-03-21 04:14:04.739431+00:00

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd0602b29e722'
down_revision: Union[str, None] = '8fb8831fb527'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('import_record',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('search_string', sa.String(), nullable=True),
    sa.Column('searched_at', sa.DateTime(), nullable=False),
    sa.Column('processor_name', sa.String(), nullable=False),
    sa.Column('processor_version', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=False),
    sa.Column('expected_reference_count', sa.Integer(), nullable=False),
    sa.Column('source_name', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM('created', 'started', 'completed', 'cancelled', name='import_record_status'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('import_batch',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('import_record_id', sa.UUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('created', 'started', 'completed', 'cancelled', name='import_batch_status'), nullable=False),
    sa.Column('storage_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['import_record_id'], ['import_record.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('importrecord')
    op.drop_table('importbatch')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('importbatch',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('import_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('created', 'started', 'completed', 'cancelled', name='importbatchstatus'), autoincrement=False, nullable=False),
    sa.Column('storage_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'import_id', name='importbatch_pkey')
    )
    op.create_table('importrecord',
    sa.Column('search_string', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('searched_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('processor_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('processor_version', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expected_reference_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('source_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('created', 'started', 'completed', 'cancelled', name='importstatus'), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='importrecord_pkey')
    )
    op.drop_table('import_batch')
    op.drop_table('import_record')
    # ### end Alembic commands ###
